-include ../make.conf

CXXFLAGS = -DLINUX $(foreach FEATURE, $(FEATURES), -D$(FEATURE)) \
	-g -Wall -W $(shell sdl-config --cflags) $(shell xml2-config --cflags)
LDFLAGS = $(shell xml2-config --libs)

OBJS = build_actor_defs.o build_extensions.o build_mines.o build_rules.o \
	build_spells.o build_weather.o xml.o
DEP_FILES=$(foreach OBJ, $(OBJS), .deps/$(OBJ).P)

DEPS_MAGIC := $(shell mkdir .deps > /dev/null 2>&1 || :)

EXES = build_actor_defs build_extensions build_mines build_rules build_sky \
	build_spells build_weather

all: $(EXES)

$(OBJS): %.o: %.cpp Makefile.linux ../make.conf
	@echo "  CXX  $@"
	@if $(CXX) $(CXXFLAGS) -MT '$@' -MD -MP -MF '.deps/$@.pp' -c $< -o $@; then \
		mv ".deps/$@.pp" ".deps/$@.P"; \
	else rm -f ".deps/$@.pp"; exit 1; \
	fi

build_actor_defs: build_actor_defs.o xml.o
	@echo "  LINK $@"
	@$(CXX) -o $@ $^ $(LDFLAGS)

build_extensions: build_extensions.o xml.o
	@echo "  LINK $@"
	@$(CXX) -o $@ $^ $(LDFLAGS)

build_mines: build_mines.o xml.o
	@echo "  LINK $@"
	@$(CXX) -o $@ $^ $(LDFLAGS)

build_spells: build_spells.o xml.o
	@echo "  LINK $@"
	@$(CXX) -o $@ $^ $(LDFLAGS)

build_sky: build_sky.o xml.o
	@echo "  LINK $@"
	@$(CXX) -o $@ $^ $(LDFLAGS)

build_rules: build_rules.o
	@echo "  LINK $@"
	@$(CXX) -o $@ $^ $(LDFLAGS)

build_weather: build_weather.o xml.o
	@echo "  LINK $@"
	@$(CXX) -o $@ $^ $(LDFLAGS)

clean:
	rm -f $(OBJS) $(EXES)

-include $(DEP_FILES)
